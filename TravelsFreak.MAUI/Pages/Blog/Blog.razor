@page "/Blog"

@inject IBlogService _BlogService

<PageTitle>Blog</PageTitle>

@if (IsProcessing)
{
    <div style="position:fixed;top:50%;left:50%;margin-top:-50px;margin-left:-100px;">
        <img src="images/ajax-loader.gif" />
    </div>
}
else
{
    <div class="container">
        <div class="row  pb-3 pt-3 backgroundWhite">
            <h2 class="text-success pl-1"><b>Blogs</b></h2>

            @foreach (var blog in Blogs)
            {
                <div class="col-lg-4 col-md-6 pb-4 filter">
                    <div class="card bg-white rounded shadow-sm" style="border:1px solid #222">
                        <div class="card-body pb-1 row">
                            <div class="col-8 h5">@blog.BlogTittle</div>
                            <div class="col-4 text-end"><span class="text-info h4">@blog.Destinations?.Location</span></div>
                        </div>

                        <img class="card-img-top img-fluid d-block mx-auto mb-3" src="@blog.BlogImageUrl" alt="menuitem image">
                        <div class="card-body p-1 px-3 row">
                            <div class="col-12 p-1">
                                <a href="" class="btn btn-dark form-control btn-sm p-2" style="height:40px">Read More</a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}

@code {
    public bool IsProcessing { get; set; } = false;
    public IEnumerable<BlogDTO> Blogs { get; set; } = new List<BlogDTO>();

    private async Task LoadBlogs()
    {
        IsProcessing = true;
        StateHasChanged();
        Blogs = await _BlogService.GetAll();
        foreach (var blog in Blogs)
        {
            blog.BlogImageUrl = "https://localhost:7285" + blog.BlogImageUrl;
        }
        IsProcessing = false;
        StateHasChanged();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadBlogs();
        }
    }
}
